// BACKEND DA API
//process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0';
// BIBLIOTECAS UTILIZADAS PARA COMPOSI√á√ÉO DA API
const { Client, LocalAuth, MessageMedia } = require("whatsapp-web.js");
const express = require("express");
const { body, validationResult } = require("express-validator");
const socketIO = require("socket.io");
const qrcode = require("qrcode");
const http = require("http");
const fileUpload = require("express-fileupload");
const app = express();
const server = http.createServer(app);
const io = socketIO(server);
// PORTA ONDE O SERVI√áO SER√Å INICIADO
const port = 8003;
const idClient = "bot-zdg5";
//CRIAR PASTA AUTOMATICAMENTE
const path = require('path');
require('events').EventEmitter.defaultMaxListeners = 999; // ou qualquer n√∫mero que voc√™ julgue necess√°rio
//VAREAVEL GLOBAL Declara√ß√£o das vari√°veis globais
//const { v4: uuidv4 } = require('uuid');
//let userStates = {}; // Objeto para armazenar estados dos usu√°rios
let nome;
let etapaCadastro = 0;
const fs = require('fs');
let usuariosMensagemEnviada = [];
//const usuariosAvisoEnviado = [];
//let usuariosAvisoEnviado = lerArquivoChatHistory();
const numeroDestino = '558584460424@s.whatsapp.net';
let usuariosJaReceberamMensagemInicial = [];
const usuariosQueReceberamMensagem = {};
var horaMensagemString = "2024-04-26T12:30:00"; // Exemplo de string representando a hora
var horaMensagem = new Date(horaMensagemString);
global.maxEventListeners = 20;
// Declara√ß√£o das vari√°veis globais
let dataAtual = new Date();
let diaDaSemana = dataAtual.getDay();

// SERVI√áO EXPRESS
app.use(express.json());
app.use(
  express.urlencoded({
    extended: true,
  })
);
app.use(
  fileUpload({
    debug: true,
  })
);
app.use("/", express.static(__dirname + "/"));
app.get("/", (req, res) => {
  res.sendFile("index.html", {
    root: __dirname,
  });
});

function delay(t, v) {
  return new Promise(function (resolve) {
    setTimeout(resolve.bind(null, v), t);
  });
}

// function gerarProtocolo() {
//   return Math.floor(1000000000 + Math.random() * 9000000000).toString(); // Gera um n√∫mero de 10 d√≠gitos
// }


function verificaPalavrasNaFrase(frase, palavras) {
  const fraseMinuscula = frase.toLowerCase();

  for (let i = 0; i < palavras.length; i++) {
    const palavraMinuscula = palavras[i].toLowerCase();
    if (fraseMinuscula.indexOf(palavraMinuscula) >= 0) {
      return true;
    }
  }

  return false;
}

// PAR√ÇMETROS DO CLIENT DO WPP
const client = new Client({
  authStrategy: new LocalAuth({ clientId: idClient }),
  puppeteer: { headless: true,
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage',
      '--disable-accelerated-2d-canvas',
      '--no-first-run',
      '--no-zygote',
      '--single-process', // <- this one doesn't works in Windows
      '--disable-gpu'
    ] }, 
});

const numeroSuporte = '558584460424@s.whatsapp.net';
// INICIALIZA√á√ÉO DO CLIENTE
client.initialize();
// EVENTOS DE CONEX√ÉO EXPORTADOS PARA O INDEX.HTML VIA SOCKET
io.on("connection", function (socket) {
  socket.emit("message", "¬© BOT-OH - Iniciado");
  socket.emit("qr", "./icon.svg");
  client.on("qr", (qr) => {
    console.log("QR RECEIVED", qr);
    qrcode.toDataURL(qr, (err, url) => {
      socket.emit("qr", url);
      socket.emit(
        "message",
        "¬© BOT-OH QRCode recebido, aponte a c√¢mera  seu celular!"
      );
    });
  });

  client.on("ready", () => {
    // ENVIANDO MENSAGEM DE AVISO PARA O N√öMERO DE SUPORTE
    client.sendMessage(numeroSuporte, '¬© BOT-OH 7 est√° online!');
    // EMITINDO MENSAGEM PARA O CLIENTE
    socket.emit("ready", "¬© BOT-OH Dispositivo pronto!");
    socket.emit("message", "¬© BOT-OH Dispositivo pronto!");
    socket.emit("qr", "./check.svg");
    console.log("¬© BOT-OH Dispositivo pronto");
  });

  client.on("authenticated", () => {
    socket.emit("authenticated", "¬© BOT-OH Autenticado!");
    socket.emit("message", "¬© BOT-OH Autenticado!");
    console.log("¬© BOT-OH Autenticado");
  });

  client.on('ready', () => {
    console.log('Bot est√° online!');
  });

  client.on("auth_failure", function () {
    socket.emit("message", "¬© BOT-OH Falha na autentica√ß√£o, reiniciando...");
    console.error("¬© BOT-OH Falha na autentica√ß√£o");
  });

  client.on("change_state", (state) => {
    console.log("¬© BOT-OH Status de conex√£o: ", state);
  });

  client.on("disconnected", (reason) => {
    socket.emit("message", "¬© BOT-OH Cliente desconectado!");
    console.log("¬© BOT-OH Cliente desconectado", reason);
    client.initialize();
  });
});


// POST PARA ENVIO DE MENSAGEM
app.post(
  "/send-message",
  [body("number").notEmpty(), body("message").notEmpty()],
  async (req, res) => {
    const errors = validationResult(req).formatWith(({ msg }) => {
      return msg;
    });

    if (!errors.isEmpty()) {
      return res.status(422).json({
        status: false,
        message: errors.mapped(),
      });
    }

    const number = req.body.number.replace(/\D/g, "");
    const numberDDD = number.substr(0, 2);
    const numberUser = number.substr(-8, 8);
    const message = req.body.message;

    if (numberDDD <= 30) {
      const numberZDG = "55" + numberDDD + "9" + numberUser + "@c.us";
      client
        .sendMessage(numberZDG, message)
        .then((response) => {
          res.status(200).json({
            status: true,
            message: "BOT-OH Mensagem enviada",
            response: response,
          });
        })
        .catch((err) => {
          res.status(500).json({
            status: false,
            message: "BOT-OH Mensagem n√£o enviada",
            response: err.text,
          });
        });
    } else if (numberDDD > 30) {
      const numberZDG = "55" + numberDDD + numberUser + "@c.us";
      client
        .sendMessage(numberZDG, message)
        .then((response) => {
          res.status(200).json({
            status: true,
            message: "BOT-OH Mensagem enviada",
            response: response,
          });
        })
        .catch((err) => {
          res.status(500).json({
            status: false,
            message: "BOT-OH Mensagem n√£o enviada",
            response: err.text,
          });
        });
    }
  }
);

// Caminho para o arquivo JSON que armazena o hist√≥rico de chat
const chatHistoryPath = path.join(__dirname, 'chatHistory/usuariosAvisoEnviado.json');
// Fun√ß√£o para ler o arquivo JSON
function lerArquivoChatHistory() {
  if (fs.existsSync(chatHistoryPath)) {
    const data = fs.readFileSync(chatHistoryPath, 'utf8');
    return JSON.parse(data);
  }
  return {};
}

// Fun√ß√£o para escrever no arquivo JSON
function escreverArquivoChatHistory(data) {
  fs.writeFileSync(chatHistoryPath, JSON.stringify(data, null, 2), 'utf8');
}
// Inicializa a lista de usu√°rios que receberam o aviso a partir do arquivo JSON
let usuariosAvisoEnviado = lerArquivoChatHistory();
// Fun√ß√£o para verificar se a mensagem foi recebida fora do hor√°rio de atendimento
function verificarHorarioAtendimento(horaMensagem) {
  return horaMensagem.getHours() < 8 || horaMensagem.getHours() >= 22;
}
// Fun√ß√£o para enviar o aviso fora do hor√°rio de atendimento
async function enviarAvisoForaDoHorario(userId, horaMensagem) {
  const agora = new Date();
  const ultimoAviso = usuariosAvisoEnviado[userId];
// Formata a hora da mensagem recebida
const horaRecebida = horaMensagem.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });
// Verifica se o usu√°rio j√° recebeu o aviso nas √∫ltimas 24 horas
  if (!ultimoAviso || (agora - new Date(ultimoAviso.timestamp)) > 24 * 60 * 60 * 1000) {
    let mensagem;
    const foraDoHorario = verificarHorarioAtendimento(horaMensagem);

    if (foraDoHorario && horaMensagem.getHours() < 8) {
      mensagem = `Agrade√ßo o seu contato. Infelizmente, recebi sua mensagem fora do meu hor√°rio de atendimento *(${horaRecebida})*\r\n\r\nN√£o se preocupe, entrarei em contato assim que poss√≠vel.\r\n\r\n‚è±Ô∏è O meu hor√°rio de atendimento:\r\nüìÜ Segunda √† Sexta: 8:00 √†s 22:00\r\nS√°bados, Domingos e Feriados: 10:00 √†s 18:00\r\n\r\nPara agilizar seu atendimento, basta digitar MENU e selecionar a op√ß√£o que deseja atendimento.`;
      console.log(`Mensagem recebida antes das 8 horas da manh√£. Hora: ${horaMensagem}`);
    } else if (foraDoHorario && horaMensagem.getHours() >= 22) {
      mensagem = `Ol√°, bem vindo ao atendimento\r\ndo leomultsolutions.com.br üòÄ\r\n\r\n‚è±Ô∏è O meu hor√°rio de atendimento:\r\nüìÜSegunda √† Sexta: 8:00 √†s 22:00\r\nS√°bados, Domingos e Feriados: 10:00 √†s 18:00\r\n\r\nVoc√™ me enviou msg √†s *${horaRecebida}* fora do meu atendimento humanizado.\r\n\r\n+ Basta digitar a palavra *MENU* e selecionar a op√ß√£o desejada, que assim que iniciar meu atendimento entrarei em contato.`;
      console.log(`Mensagem recebida ap√≥s as 22 horas. Hora: ${horaMensagem}`);
    } else {
      console.log(`Mensagem recebida dentro do hor√°rio de atendimento. Hora: ${horaMensagem}`);
      return;
    }

    // Envie a mensagem ao usu√°rio
    await client.sendMessage(userId, mensagem);
    console.log("Mensagem enviada com sucesso!");

    // Atualiza a hora do √∫ltimo aviso enviado para o usu√°rio e se foi fora do hor√°rio
    usuariosAvisoEnviado[userId] = {
      timestamp: agora.toISOString(),
      foraDoHorario: foraDoHorario
    };
    escreverArquivoChatHistory(usuariosAvisoEnviado);
    console.log(`Usu√°rio ${userId} adicionado √† lista de avisos enviados.`);
  } else {
    console.log(`Usu√°rio ${userId} j√° recebeu um aviso nas √∫ltimas 24 horas.`);
  }
}

// Certifique-se de que o client est√° sendo importado corretamente de onde quer que esteja inicializado
client.on("message", async (msg) => {
  // Verifica se a mensagem foi recebida de um grupo
  if (msg.from.includes("@g.us")) {
    console.log("Mensagem recebida de um grupo, ignorando...");
    return;
  }
  // Verifica se a mensagem foi recebida fora do hor√°rio de atendimento
  const horaMensagem = new Date(msg.timestamp * 1000);
  console.log(`Nova mensagem recebida. Hora: ${horaMensagem}`);
  // Envia aviso se a mensagem foi recebida fora do hor√°rio de atendimento
  await enviarAvisoForaDoHorario(msg.from, horaMensagem);
  // Adicione aqui qualquer l√≥gica adicional que precise para processar outras mensagens...
});

client.on("message", async (msg) => {
  // Ignorar mensagens de grupos e mensagens do pr√≥prio bot
  if (msg.type.toLocaleUpperCase() === "e2e_notification" || msg.from.includes("@g.us") || msg.from === client.info.wid._serialized) {
    return;
  }

  const horaMensagem = new Date(msg.timestamp * 1000);
  console.log(`Nova mensagem recebida. Hora: ${horaMensagem}`);

  // Verifica se est√° dentro do hor√°rio de atendimento
  const foraDoHorario = verificarHorarioAtendimento(horaMensagem);
  console.log(`Mensagem recebida ${foraDoHorario ? 'fora' : 'dentro'} do hor√°rio de atendimento. Hora: ${horaMensagem}`);

  const userId = msg.from;

  // Verifica se o usu√°rio j√° recebeu a mensagem inicial
  const usuarioJaRecebeuMensagem = usuariosJaReceberamMensagemInicial.includes(userId);
  const contemMenu = msg.body.trim().toLowerCase() === "menu";
  console.log("Cont√©m menu:", contemMenu);

  // Se o usu√°rio ainda n√£o recebeu a mensagem inicial e est√° dentro do hor√°rio, envia a mensagem
  if (!usuarioJaRecebeuMensagem && !foraDoHorario) {
    console.log("Enviando mensagem inicial...");

    // Marca o usu√°rio como j√° tendo recebido a mensagem inicial imediatamente
    usuariosJaReceberamMensagemInicial.push(userId);

    const media1 = MessageMedia.fromFilePath("./leooh.png");
    const chat = await msg.getChat();

    console.log("Enviando estado de digita√ß√£o...");
    await chat.sendStateTyping();

    // Envia a mensagem inicial ap√≥s um pequeno delay
    setTimeout(async () => {
      const contact = await msg.getContact();
      const userName = contact && contact.name ? contact.name : "amigo(a)";
      const replyMessage = `Ol√°! ${userName} üëã Obrigado por entrar em contato! Esta √© uma mensagem autom√°tica do Leo, mas n√£o se preocupe, em breve, ele assumir√° o atendimento.\r\n\r\nüî¢ Para agilizar seu atendimento, escolha a op√ß√£o que melhor corresponde ao que deseja atendimento.\r\n\r\n1‚ï†‚û¢‚úçüèæ Cria√ß√£o de Sites\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n2‚ï†‚û¢üöÄ Gest√£o de Tr√°fego\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n3‚ï†‚û¢üì± Ferramentas para WhatsApp\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n4‚ï†‚û¢üì¢ Divulgador Digital\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n5‚ï†‚û¢üéâ Entretenimento\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n6‚ï†‚û¢üåê Internet Ilimitada\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n7‚ï†‚û¢üì¶ J√Å SOU CLIENTE\r\n\r\n*‚öôÔ∏èDigite o n√∫mero da op√ß√£o desejada e Leo estar√° pronto para ajudar!* ü§ñ‚ú®`;

      await client.sendMessage(msg.from, media1, { caption: replyMessage });
      console.log('Mensagem inicial enviada com sucesso.');
    }, 1000);
  } else if (foraDoHorario) {
    console.log("Mensagem inicial n√£o enviada. Fora do hor√°rio de atendimento.");
  }

  // Se a mensagem cont√©m a palavra "menu", envie o menu independentemente do hor√°rio ou se j√° recebeu a mensagem inicial
  if (contemMenu) {
    console.log("Enviando menu...");
    const replyMessage = `üî¢ Para agilizar seu atendimento, escolha a op√ß√£o que melhor corresponde ao que deseja atendimento\r\n\r\n1‚ï†‚û¢üåê Cria√ß√£o de Sites\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n2‚ï†‚û¢üöÄ Gest√£o de Tr√°fego\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n3‚ï†‚û¢üì± Ferramentas para WhatsApp\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n4‚ï†‚û¢üì¢ Divulgador Digital\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n5‚ï†‚û¢üéâ Entretenimento\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n6‚ï†‚û¢üåê Internet Ilimitada\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n7‚ï†‚û¢üì¶ J√Å SOU CLIENTE\r\n\r\n*‚öôÔ∏èBasta digitar o n√∫mero, ou nome da op√ß√£o que corresponde seu atendimento*ü§ñ‚ú®`;

    await client.sendMessage(msg.from, replyMessage);
  }


  if (
    msg.body.toLowerCase() === '1' ||
    msg.body.toLowerCase() === 'cria√ß√£o de sites' ||
    msg.body.toLowerCase() === 'criar site' ||
    msg.body.toLowerCase() === 'sites'
  ) {
    const chat = await msg.getChat();

    setTimeout(async () => {
      await chat.sendStateTyping(5000);

      const replyMessage = `üåê Para uma presen√ßa online impactante, nossa op√ß√£o de Cria√ß√£o de Sites √© perfeita.\r\n\r\nDesenvolvemos sites √∫nicos, alinhados √† sua marca, para proporcionar uma experi√™ncia memor√°vel aos seus visitantes.\r\n\r\n*üî¢ Digite uma das op√ß√µes*\r\n\r\n8‚ï†‚û¢ VER PROJETOS üìä\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n9‚ï†‚û¢ AGENDAR REUNI√ÉO üìÖ\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n\r\n‚ôªÔ∏èEscolha umas das op√ß√µes para continuarmos nossa conversa!`;

      // Enviar a mensagem apenas com texto
      await chat.sendMessage(replyMessage);
    }, 8000);
}

  
  //Op√ß√£o 2 do MENU
  

  
  if (msg.body === '5' || msg.body === 'entretenimento'|| msg.body === 'Entretenimento' || msg.body === 'canais') {
    const media1 = MessageMedia.fromFilePath("./icon66.png");
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      await client.sendMessage(msg.from, media1, { caption: "üåê *Nova Dimens√£o de Entretenimento*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\n_Agrade√ßo muito por escolher a op√ß√£o de Entretenimento! Estou entusiasmados para apresentar a voc√™ nossa gama exclusiva de servi√ßos de Canais de *TV WEB*._\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\n*TESTE GRATIS* üì∫ üçø\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\n‚ï†‚û¢Escolha os canais e programas que\r\n‚ï†‚û¢mais lhe interessam, criando uma experi√™ncia\r\n‚ï†‚û¢de visualiza√ß√£o personalizada com:\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\n‚ï†‚û¢ A·¥õ·¥ú·¥Ä ü…™·¥¢·¥Ä·¥ÑÃß·¥ÄÃÉ·¥è ·¥Ä·¥ú·¥õ·¥è·¥ç·¥ÄÃÅ·¥õ…™·¥Ñ·¥Ä\r\n‚ï†‚û¢ s·¥á·¥ç “ì…™·¥Ö·¥á ü…™·¥Ö·¥Ä·¥Ö·¥á\r\n‚ï†‚û¢·¥õeste 4 horas …¢ Ä·¥ÄÃÅ·¥õ…™s\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\n‚ï†‚ûï de 9.600 CANAIS üáßüá∑ FUNCIONA EM TODO ‚ï†BRASIL OU FORA SERVI√áO DE QUALIDADE\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†üñ•Ô∏èCANAIS üé¨FILMES üé¨S√âRIES\r\n‚ï†üñ•Ô∏èCANAIS üé¨FILMES üé¨S√âRIES\r\n‚ï†‚û¢STAR+\r\n‚ï†‚û¢NETFLIX\r\n‚ï†‚û¢HBO MAX\r\n‚ï†‚û¢APPLE TV +\r\n‚ï†‚û¢GLOBO PLAY\r\n‚ï†‚û¢DISNEY PLUS\r\n‚ï†‚û¢DISCOVERY +\r\n‚ï†‚û¢PARAMOUNT +\r\n‚ï†‚û¢AMAZON PRIME\r\n‚ï†üì° TODOS OS REALITY SHOWS\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†üì° CANAIS ABERTOS/FECHADOS\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†üé¨ FILMES CARTAZ DE CINEMA\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†üì∫ GLOBO\r\n‚ï†üì∫ SBT\r\n‚ï†üì∫ RECORD\r\n‚ï†ü™Ç ESPORTE (TODOS)\r\n‚ï†üé≠ INFANTIS\r\n‚ï†üìΩÔ∏è REDE TELECINE\r\n‚ï†üíº NOT√çCIAS\r\n‚ï†‚öΩ PREMIERE\r\n‚ï†üíÉ BBB\r\n‚ï†ü•ä COMBATE\r\n‚ï†üßû CARTOON NETWORK\r\n‚ï†üö¥ SPORT TV\r\n‚ï†‚õ™ CANAIS RELIGIOSOS\r\n‚ï†üìª R√ÅDIO\r\n‚ï†üßõüèª‚Äç‚ôÇÔ∏è NOVELA ANTIGA\r\n‚ï†‚ûï de 1.600 CANAIS üáßüá∑ FUNCIONA EM\r\n‚ï†‚û¢TODO BRASIL OU FORA\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†DISPOSITIVOS COMPATIVEIS\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n‚ï†‚û¢SMART ROKU\r\n‚ï†‚û¢SMART TV\r\n‚ï†‚û¢CELULAR\r\n‚ï†‚û¢TABLET\r\n‚ï†‚û¢NOTEBOOK & PC\r\n‚ï†‚û¢TV BOX\r\n‚ï†‚û¢IPHONE\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nOfere√ßo teste de 4 horas para voc√™ testar sem compromisso.üëá Para solicitar seu teste basta digitar *Teste* ou Numero *(14)* e seguir com atendimento.",
      });

      setTimeout(async () => {
        await client.sendMessage(
          msg.from, "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùàBem-vindo(a) Sua jornada conosco come√ßa agora. Por favor, digite o n√∫mero ou nome da op√ß√£o que aparece em nosso menu‚ùà‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\n\n13‚ï†‚û¢VALOR DOS PLANO\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n14‚ï†‚û¢FAZER TESTE\r\n"
        ); }, 9000); }, 9000);}  





  if (msg.body === '2' || msg.body === 'gestor de trafego'|| msg.body === 'trafego pago' || msg.body === 'anuncio') {
          const media1 = MessageMedia.fromFilePath("./trafego.png");
          const chat = await msg.getChat();
          
          // Fun√ß√£o para enviar uma mensagem com estado de "digitando" e um intervalo de tempo
          const sendMessageWithTyping = async (message, delay) => {
              await chat.sendStateTyping(); // Enviar estado de "digitando"
              await new Promise(resolve => setTimeout(resolve, delay)); // Esperar o tempo do delay
              await client.sendMessage(msg.from, message); // Enviar mensagem
          };
      
          // Mensagem 1 com a imagem
          await chat.sendStateTyping(); // Enviar estado de "digitando"
          await new Promise(resolve => setTimeout(resolve, 2000)); // Esperar 2 segundos
          await chat.sendMessage(media1, { caption: "*Voc√™ est√° pronto para levar sua presen√ßa online para o pr√≥ximo n√≠vel?*\n\nNosso servi√ßo de Gest√£o de Tr√°fego Pago √© a chave para aumentar a visibilidade, atrair clientes relevantes e impulsionar suas convers√µes.\n\nO QUE PODEMOS FAZER POR VOC√ä?" });
      
          // Mensagem 2
          const message2 = "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\nüåÄ CAMPANHAS ESTRAT√âGICAS: üåÄ\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\nDesenvolvemos campanhas personalizadas para atingir seu p√∫blico-alvo, maximizando o retorno sobre o investimento.";
          await sendMessageWithTyping(message2, 2000);
      
          // Mensagem 3
          const message3 = "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\nüåÄ OTIMIZA√á√ÉO CONT√çNUA:     üåÄ\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\nMonitoramos, analisamos e ajustamos constantemente suas campanhas para garantir resultados consistentes e eficazes.";
          await sendMessageWithTyping(message3, 5000);
      
          // Mensagem 4
          const message4 = "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\nüåÄ SEGMENTA√á√ÉO PRECISA:     üåÄ\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\nAlcance as pessoas certas no momento certo. Utilizamos segmenta√ß√£o avan√ßada para direcionar seu tr√°fego para os clientes mais propensos a converter";
          await sendMessageWithTyping(message4, 9000);
      
          // Mensagem 5
          const message5 = "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\nüåÄ RELAT√ìRIOS DETALHADOS: üåÄ\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\nMantenha-se informado sobre o desempenho de suas campanhas com relat√≥rios detalhados, proporcionando transpar√™ncia total.";
          await sendMessageWithTyping(message5, 13000);
      
          // Mensagem 6
          const message6 = "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\nüåÄ ESTRAT√âGIAS MULTICANAL: üåÄ\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\nAproveitamos plataformas diversas para alcan√ßar seu p√∫blico em todos os lugares, desde redes sociais at√© an√∫ncios de pesquisa.";
          await sendMessageWithTyping(message6, 15000);
      
          // Mensagem 7
          const message7 = "Convido voc√™ a agendar uma reuni√£o conosco. Entendendo melhor o seu neg√≥cio, poderemos criar uma estrat√©gia personalizada que atenda aos seus objetivos exclusivos.";
          await sendMessageWithTyping(message7, 18000);
      
          // Mensagem 8
          const message8 = "Garantimos uma gest√£o de tr√°fego pago que vai al√©m das expectativas, otimizando resultados e maximizando o impacto online de sua marca. Juntos, podemos transformar sua presen√ßa online e alcan√ßar resultados extraordin√°rios.";
          await sendMessageWithTyping(message8, 21000);
      
          // Mensagem 9
          const message9 = "Para agendar sua reuni√£o agora! üìÜüöÄ basta digitar a op√ß√£o!\n\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n9‚ï†‚û¢AGENDAR REUNI√ÉO\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\n#‚ï†‚û¢FALAR COM ESPECIALISTA";
          await sendMessageWithTyping(message9, 25000);
      }

  //Op√ß√£o 4 do MENU
  if (msg.body === "4") {
    const media1 = MessageMedia.fromFilePath("./leo2027.png");
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      await client.sendMessage(msg.from, media1, {
        caption:
          "‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚â™ ¬∞‚ùà¬∞ ‚â´ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\nDestaque Sua Marca com Nossa Divulga√ß√£o em Mais de 5 Mil Grupos no WhatsAppüöÄ\r\n\r\nVoc√™ est√° pronto para destacar sua marca, produtos ou servi√ßos no mundo digital? Seu an√∫ncio merece visibilidade m√°xima, e estou aqui para garantir que ele seja notado!\r\n\r\nNosso servi√ßo de Divulgador Digital √© a resposta para impulsionar sua visibilidade online e alcan√ßar um p√∫blico mais amplo.\r\n\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n*üöÄ O QUE OFERECEMOS:*\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n\r\nCom nosso servi√ßo exclusivo, divulgamos seu an√∫ncio automaticamente em mais de 5 mil grupos do WhatsApp com marca√ß√£o fantasma, 24 horas por dia.\r\n\r\nPlanos Irresist√≠veis:\r\n‚ñ´Ô∏è 1 Dia: R$ 10\r\n‚óé ‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê ‚óé\r\n‚ñ´Ô∏è 15 Dias: R$ 50\r\n‚óé ‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê ‚óé\r\n‚ñ´Ô∏è 30 Dias: R$ 70\r\n\r\nAlcance um p√∫blico amplo e potencialize seus resultados com a nossa divulga√ß√£o estrat√©gica.\r\n\r\nDestaque-se na multid√£o e conquiste a aten√ß√£o que sua marca merece! Digete *(22 ou Contratar)* agora para impulsionar sua visibilidade online! üì≤‚ú®",
      });

      setTimeout(async () => {
        await client.sendMessage(
          msg.from,"‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê \r\n*Destaque-se no Mundo Digital*\n\r‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\nAproveite nosso servi√ßo para alcan√ßar novos horizontes e conquistar a aten√ß√£o do seu p√∫blico-alvo.\r\n\r\nDesenvolvemos abordagens personalizadas para promover sua marca, adaptadas √†s caracter√≠sticas exclusivas do seu neg√≥cio.\r\n\r\nüìÜüöÄ *Digite a op√ß√£o desejada*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n22‚ï†‚û¢CONTRATAR\r\n‚óé ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚óé\r\n#‚ï†‚û¢FALAR COM ESPECIALISTA\r\n");
      }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da pr√≥xima mensagem
    }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da mensagem inicial
  } 


    else if (
    msg.body === "nao" ||
    msg.body.toLowerCase() === "N√£o" ||
    msg.body.toLowerCase() === "N√ÉO" ||
    msg.body.toLowerCase() === "n√£o"
  ) {
    const media1 = MessageMedia.fromFilePath("./icon1.png");
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      await client.sendMessage(msg.from, media1, {
        caption:
          "Compreendo perfeitamente a sua decis√£o e agrade√ßo por considerar nossa oferta.\r\n\r\nüòä _Se surgirem d√∫vidas ou se voc√™ reconsiderar no futuro, n√£o hesite em entrar em contato._                        ",
      });

      // Use setTimeout para adicionar um atraso antes de enviar a pr√≥xima mensagem 
      setTimeout(async () => {
        await client.sendMessage(
          msg.from,
          "*Por favor, sinta-se √† vontade para nos contactar* a qualquer moment, basta digitar *(MENU)* _Sua satisfa√ß√£o √© importante para me e estou disposto a encontrar a melhor solu√ß√£o para voc√™._"
        );
      }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da pr√≥xima mensagem
    }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da mensagem inicial
  }

  // //Op√ß√£o 5 do MENU
    if (msg.body === "13") {
    const media1 = MessageMedia.fromFilePath("./icon7.png");

    // Enviar estado "digitando" por 8 segundos
    const chat = await msg.getChat();
    await chat.sendStateTyping();

    // Use setTimeout para adicionar um atraso de 8 segundos
    setTimeout(async () => {
      // Ap√≥s o atraso de 8 segundos, envie a mensagem
      await client.sendMessage(msg.from, media1, {
        caption:
          "*ü§©Agora, digite o n√∫mero do plano que mais se encaixa no seu estilo de vida:*\r\n\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùà\r\n15. *üíºPlano Mensal 35.00$:* Perfeito para experimentar\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùà\r\n16 *üìÖPlano Trimestral 95.00 R$:*\r\nMais economia a cada trimestre\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùà\r\n17. *üìÜPlano Semestral 185.00 R$:*\r\nA escolha da estabilidade\r\n‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ùà\r\n18. *üìàPlano Anual 250.00 R$*\r\nA op√ß√£o mais vantajosa.\r\n",
      });
    }, 8000);
  }
  // //Mostrar valores dos planos
  if (
    msg.body === "15" ||
    msg.body.toLowerCase() === "Plano mensal" ||
    msg.body.toLowerCase() === "10 Plano mensal" ||
    msg.body.toLowerCase() === "PLANO MENSAL" ||
    msg.body.toLowerCase() === "plano mensal" ||
    msg.body.toLowerCase() === "Plano Mensal"
  ) {
    // O cliente escolheu o Plano Mensal
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      const replyMessage =
        "*Voc√™ escolheu o Plano MensalüìÖ 35$*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêREAIS\r\nEste √© um √≥timo plano para come√ßar. _Voc√™ Gostaria de fazer o Teste?_ digite *SIM* ou *N√£o*\r\n";
      client.sendMessage(msg.from, replyMessage);
    }, 5000); // Atraso de 5 segundos
  } 
  
  else if (msg.body === "16") {
    // O cliente escolheu o Plano Trimestral
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      const replyMessage =
        "*Voc√™ escolheu o Plano TrimestralüìÖ 95$*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêREAIS\r\nEconomize ainda mais a cada trimestre. _Voc√™ Gostaria de fazer o Teste?_ digite *SIM* ou *N√£o*\r\n";
      client.sendMessage(msg.from, replyMessage);
    }, 5000); // Atraso de 5 segundos
  } 
  
  else if (msg.body === "17") {
    // O cliente escolheu o Plano Semestral
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      const replyMessage =
        "*Voc√™ escolheu o Plano Semestral.üìÖ 185$*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêREAIS\r\nA escolha da estabilidade. _Voc√™ Gostaria de fazer o Teste?_ digite *SIM* ou *N√£o*\r\n";
      client.sendMessage(msg.from, replyMessage);
    }, 5000);
  }
  
  else if (msg.body === "18") {
    // O cliente escolheu o Plano Anual
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      const replyMessage =
        "*Voc√™ escolheu o Plano Anual.üìÖ 250$*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïêREAIS\r\nA op√ß√£o mais vantajosa para economizar _Voc√™ Gostaria de fazer o Teste?_ digite *SIM* ou *N√£o*\r\n";
      client.sendMessage(msg.from, replyMessage);
    }, 5000); // Atraso de 5 segundos
  }


  if (msg.body === 'fazer teste' || msg.body.toLowerCase() === '14' || msg.body.toLowerCase() === 'Sim' || msg.body.toLowerCase() === 'SIM') {
    // Etapa inicial: pergunte ao usu√°rio sobre o dispositivo
    const media1 = MessageMedia.fromFilePath('./icon5.png');
    const chat = await msg.getChat();
  
    setTimeout(async () => {
        await chat.sendStateTyping(8000);
        const replyMessage = `*üì±Em qual dispositivo voc√™ gostaria de testar?* Basta digitar o nome do dispositivo das listas abaixo:\r\n\r\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïêüñ•Ô∏è‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\r\n‚ï†‚û¢ *Funciona Em:*\r\n‚ï†‚û¢ 6. Computador e Not\r\n‚ï†‚û¢ 7. TVs Smart\r\n‚ï†‚û¢ 8. TV Box\r\n‚ï†‚û¢ 9. Celular\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\r\n\r\n_üî¢Digite o n√∫mero correspondente ao dispositivo que deseja testar nosso servi√ßo TV WEB._`;
        await client.sendMessage(msg.from, media1, { caption: replyMessage });
    }, 8000);}
  


    if (/^(computador|tv\sbox|tv\ssmart|tv\slg|tv\ssamsung|celular|iphone|android|tcl|notbook)$/i.test(msg.body))
    {  // Captura a escolha do dispositivo do usu√°rio
      const chosenDevice = msg.body;
    
      // Etapa secund√°ria: continue com base na escolha do dispositivo
      // Neste exemplo, voc√™ pode adaptar a mensagem de acordo com a escolha do dispositivo
    
      setTimeout(async () => {
        // Antes de enviar a mensagem, configure o estado "digitando" por 5 segundos
        const chat = await msg.getChat();
        await chat.sendStateTyping(5000);
    
        // Captura o nome do remetente
        const contact = await msg.getContact();
    
        const responseMessage = `√ìtima escolha, *${contact.name || 'amigo'}*!\r\n\r\nVoc√™ escolheu o dispositivo *${chosenDevice}* para testar nossos canais, *Assista o video enquanto eu encaminho seu contato* para o _L√©o, nosso especialista._ *Aproveite!üöÄ*`;
        const media1 = MessageMedia.fromFilePath('./video1.mp4');
        await client.sendMessage(msg.from, media1, {
          caption: responseMessage + "\r\n\r\n*Assista o v√≠deo at√© o finalüöÄ*"
        });
    
        // Adicionar uma mensagem ap√≥s o v√≠deo
        setTimeout(async () => {
          await client.sendMessage(msg.from, 'Obrigado(a) seu contato foi transferido para o *Leo TV WEB* e em alguns minutos ele vai entrar em contato com voc√™ enviando seu teste.');
          const contact = await msg.getContact();
          await client.sendMessage('558584460424@c.us', `Cliente ${contact.name} solicitando atendimento na op√ß√£o teste! ${chosenDevice} https://wa.me/${contact.number}`);
          await msg.reply(`Pronto! Seu contato j√° foi *encaminhado para o Leonardo.* Se precisar de alguma informa√ß√£o do MENU, *basta digitar (MENU).*`);
        }, 8000); // Espere 8 segundos ap√≥s o v√≠deo antes de enviar a mensagem
      }, 8000);}

      
//MENSAGEM ENCAMINHADA PARA ATENDENTE
    if (msg.body === '9' || msg.body.toLowerCase() === 'Agendar reuni√£o'|| msg.body.toLowerCase() === 'reuni√£o') {
      const media1 = MessageMedia.fromFilePath('./suporteleo.png');
    
      // Enviar estado "digitando" por 8 segundos
      const chat = await msg.getChat();
      await chat.sendStateTyping();
    
      // Use setTimeout para adicionar um atraso de 8 segundos
      setTimeout(async () => {
        // Ap√≥s o atraso de 8 segundos, envie a mensagem
        await client.sendMessage(msg.from, media1, {
          caption: 'Obrigado(a) seu contato ser√° transfirido para o Leonardo, em alguns minutos ele vai entrar em contato com voc√™!'
        });
        const contact = await msg.getContact();
        setTimeout(function () {
          msg.reply(`@${contact.number}` + ' *Pronto! seu contato j√° foi encaminhado para o Leonardo,* se precisar de alguma informa√ß√£o do MENU basta digitar (MENU)');
          client.sendMessage('558584460424@c.us', 'Cliente solicitando atendimento na OP√áAO 9 REUNI√ÉO. https://wa.me/' + `${contact.number}`);
        }, 8000); }, 8000); }
    


    if (msg.body === '22' || msg.body.toLowerCase() === 'Contratar'|| msg.body.toLowerCase() === 'CONTRATAR') {
          const media1 = MessageMedia.fromFilePath('./suporteleo.png');
        
          // Enviar estado "digitando" por 8 segundos
          const chat = await msg.getChat();
          await chat.sendStateTyping();
        
          // Use setTimeout para adicionar um atraso de 8 segundos
          setTimeout(async () => {
            // Ap√≥s o atraso de 8 segundos, envie a mensagem
            await client.sendMessage(msg.from, media1, {
              caption: 'Obrigado(a) seu contato ser√° transfirido para o Leonardo, em alguns minutos ele vai entrar em contato com voc√™!'
            });
            const contact = await msg.getContact();
            setTimeout(function () {
              msg.reply(`@${contact.number}` + ' *Pronto! seu contato j√° foi encaminhado para o Leonardo,* se precisar de alguma informa√ß√£o basta digitar (MENU)');
              client.sendMessage('558584460424@c.us', 'Cliente solicitando atendimento na OP√áAO 4 CONTRATAR. https://wa.me/' + `${contact.number}`);
            }, 8000); }, 8000); }
        
     

            if (msg.body === '#' || msg.body.toLowerCase() === 'Falar com especialista'|| msg.body.toLowerCase() === 'reuni√£o') {
              const media1 = MessageMedia.fromFilePath('./suporteleo.png');
            
              // Enviar estado "digitando" por 8 segundos
              const chat = await msg.getChat();
              await chat.sendStateTyping();
            
              // Use setTimeout para adicionar um atraso de 8 segundos
              setTimeout(async () => {
                // Ap√≥s o atraso de 8 segundos, envie a mensagem
                await client.sendMessage(msg.from, media1, {
                  caption: 'Obrigado(a) seu contato ser√° transfirido para o Leonardo, em alguns minutos ele vai entrar em contato com voc√™!'
                });
                const contact = await msg.getContact();
                setTimeout(function () {
                  msg.reply(`@${contact.number}` + ' *Pronto! seu contato j√° foi encaminhado para o Leonardo,* se precisar de alguma informa√ß√£o basta digitar (MENU)');
                  client.sendMessage('558584460424@c.us', 'Cliente solicitando atendimento na OP√áAO # FALAR COM ATENDENTE. https://wa.me/' + `${contact.number}`);
                }, 8000); }, 8000); }
            
        
// Verifica√ß√£o do fluxo do chat
if (msg.body.toUpperCase() === "7" || msg.body.toUpperCase() === "J√Å SOU CLIENTE") {
  etapaCadastro = 1; // Define a etapa inicial do cadastro
  await client.sendMessage(
    msg.from,
    "üëã Ol√°! üòä Para garantir que eu possa oferecer o suporte mais eficaz, gostar√≠a de obter algumas informa√ß√µes essenciais.\r\n\r\nüìù Poderia gentilmente fornecer *SEU NOME* para que eu possa me dirigir a voc√™ corretamente?"
  );
} else if (etapaCadastro === 1) {
  nome = msg.body.trim(); // Remove a palavra-chave const
  await client.sendMessage(
    msg.from,
    `Blz! _${nome},_ *üåüAgora digite em poucas palavras* o motivo do seu contato para um atendimento mais eficiente e direcionado.\r\n\r\nüí° *Saber exatamente do que voc√™ precisa* me ajuda a otimizar meu tempo e garantir uma solu√ß√£o r√°pida e precisa para seu suporte.`
  );
  etapaCadastro = 2; // Avan√ßa para a pr√≥xima etapa do cadastro ap√≥s enviar a mensagem
} else if (etapaCadastro === 2) {
  const motivo = msg.body.trim(); // Obt√©m o motivo fornecido pelo usu√°rio
  etapaCadastro = 0; // Reinicia a etapa do cadastro
  await client.sendMessage(
    msg.from,
    `Entendi *${nome}!* ü§î Voc√™ deseja falar sobre ${motivo}.\r\n\r\nVamos cuidar disso para voc√™! Em breve, entrarei em contato para confirmar os detalhes.\r\n\r\n*Obrigado pela sua paci√™ncia e confian√ßa! üôè*`
  );

  // Chamada da fun√ß√£o de encaminhamento de mensagem
  await encaminharMensagem(msg, motivo);
}


//OP√á√ÉO 7 JA SOU CLIENTE
async function encaminharMensagem(msg, motivo) {
  const media1 = MessageMedia.fromFilePath('./suporteleo.png');
  const chat = await msg.getChat();
  await chat.sendStateTyping();
  setTimeout(async () => {
    await client.sendMessage(msg.from, media1, {
      caption: 'Obrigado(a) seu contato ser√° transferido para o Leonardo, em alguns minutos ele vai entrar em contato com voc√™!'
    });
    const contact = await msg.getContact();
    setTimeout(function () {
      msg.reply(`@${contact.number}` + ' *Pronto! Seu contato j√° foi encaminhado para o Leonardo,* se precisar de alguma informa√ß√£o basta digitar (MENU)');
      client.sendMessage('558584460424@c.us', `Cliente solicitando atendimento na OP√á√ÉO J√Å SOU CLIENTE. Motivo: ${motivo} https://wa.me/${contact.number}`);
    }, 8000);
  }, 8000);
}


  //Op√ß√£o 8 do MENU
  if (msg.body.toLowerCase() === "ver projetos" || msg.body === "8") {
    const chat = await msg.getChat();

    // Enviar a mensagem inicial
    await chat.sendMessage("üìä *Veja alguns de meus Projetos*\r\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚ùà\r\nAgrade√ßo muito pelo seu interesse em meu servi√ßo de cria√ß√£o de sites.\r\n\r\nFavor me informar se h√° algo espec√≠fico que chamou sua aten√ß√£o ou se precisar de mais informa√ß√µes para tomar uma decis√£o, gostaria de convidar VOC√ä para uma reuni√£o para voc√™ me falar do seu projeto, basta digitar (9) ");
    
    const media2 = MessageMedia.fromFilePath("./Sitedesafio10d.pdf");
    const media3 = MessageMedia.fromFilePath("./Advogacia.pdf");
    const media4 = MessageMedia.fromFilePath("./Portfolio.pdf");
    const media5 = MessageMedia.fromFilePath("./Sitetvweb.pdf");
    const media6 = MessageMedia.fromFilePath("./LojaOnline.pdf");

    // Enviar os PDFs com intervalos ajustados
    setTimeout(() => {
        client.sendMessage(msg.from, media2, { caption: "SITE EMAGRECIMENTO" });
    }, 5000); // 5 segundos

    setTimeout(() => {
        client.sendMessage(msg.from, media3, { caption: "SITE ADVOGACIA" });
    }, 7000); // 7 segundos

    setTimeout(() => {
        client.sendMessage(msg.from, media4, { caption: "PORTFOLIO" });
    }, 9000); // 9 segundos

    setTimeout(() => {
        client.sendMessage(msg.from, media5, { caption: "ENTRETENIMENTO" });
    }, 11000); // 11 segundos

    setTimeout(() => {
        client.sendMessage(msg.from, media6, { caption: "LOJA ONLINE" });
    }, 13000); // 13 segundos

    // Enviar a mensagem de texto ap√≥s todos os PDFs
    setTimeout(() => {
        client.sendMessage(msg.from, "üîç Eu estou a disposi√ß√£o para discutir qualquer aspecto espec√≠fico, responder a perguntas ou ajustar detalhes conforme suas prefer√™ncias.\r\n\r\nüîê Quero muito garantir que o projeto final atenda totalmente √†s suas expectativas, basta digitar *9‚ï†‚û¢ PARA AGENDAR UMA REUNI√ÉO GRATUITA üìÖ.*");
    }, 15000); // 15 segundos ap√≥s o √∫ltimo PDF
}


if (msg.body === '6') {
    const media1 = MessageMedia.fromFilePath('./icon8.png');
    const chat = await msg.getChat();
    await chat.sendStateTyping();
    setTimeout(async () => {
      await client.sendMessage(msg.from, media1, {
        caption: 'üåê ùóúùó°ùóßùóòùó•ùó°ùóòùóßüöÄ ùóúùóüùóúùó†ùóúùóßùóîùóóùóî üåê\r\n\r*Operadora*\r\n\rüî¥ VIVO üî¥\r\nüîµ TIM üîµ\r\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\r\n‚úÖ ùü≠-ùïÉùïÜùîæùïåùïÄ‚Ñï / ùó•$ 25,ùü¨ùü¨\r\n\r\n‚è≥ ùóóùòÇùóøùóÆùó∞ÃßùóÆÃÉùóº ùüØùü¨ ùó±ùó∂ùóÆùòÄ ‚è≥\r\nüåê - ùó°ùóÆùòÉùó≤ùó¥ùóÆùó∞ÃßùóÆÃÉùóº ùóúùóπùó∂ùó∫ùó∂ùòÅùóÆùó±ùóÆ\r\n\üé¨ - ùó©ùó∂ùó±ùó≤ùóºùòÄ ùó¢ùóªùóπùó∂ùóªùó≤\r\nüé≠ - ùó•ùó≤ùó±ùó≤ùòÄ ùó¶ùóºùó∞ùó∂ùóÆùó∂ùòÄ\r\nüéÆ - ùóùùóºùó¥ùóºùòÄ ùó¢ùóªùóπùó∂ùóªùó≤ \r\nüôå   E muito mais\r\nüì° ùó©ùó∂ùóÆ ùóîùó£ùóüùóúùóñùóîùóßùóúùó©ùó¢\r\nüì≤ ùóñùó≤ùóπùòÇùóπùóÆùóøùó≤ùòÄ/ùóîùó°ùóóùó•ùó¢ùóúùóó\r\nüöÄ ùóîùóπùòÅùóÆ ùòÉùó≤ùóπùóºùó∞ùó∂ùó±ùóÆùó±ùó≤\r\nüî∞ ùóßùóòùó¶ùóßùóò ùóöùó•ùóîÃÅùóßùóúùó¶ üî∞ Dura√ß√£o 2 horasüåü\r\n\r\n*Obtenha Internet Ilimitada Agora*\r\n_Sua experi√™ncia de internet est√° prestes a mudar para sempre, Aproveite essa oportunidade para liberar todo o potencial do seu celular Android!üöÄüì±_'
      });
  
      // Use setTimeout para adicionar um atraso antes de enviar a pr√≥xima mensagem
      setTimeout(async () => {
        await client.sendMessage(msg.from, 'Se tiver interesse em fazer o teste, Funciona nas seguintes operadoras üîµTIM,üü£VIVO: *Basta dizer qual √© sua operadora que enviarei seu teste*');
      }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da pr√≥xima mensagem
    }, 8000); // Atraso de 8 segundos (8000 milissegundos) antes da mensagem inicial
  } 

});

// INITIALIZE DO SERVI√áO
server.listen(port, function () {
  console.log("¬© Comunidade OH - Aplicativo rodando na porta *: " + port);
});
